Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Admin\AppData\Roaming\Python\Python313\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 719, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
%load_ext memory_profiler
------------------


[31m---------------------------------------------------------------------------[39m
[31mModuleNotFoundError[39m                       Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[10][39m[32m, line 1[39m
[32m----> [39m[32m1[39m [43mget_ipython[49m[43m([49m[43m)[49m[43m.[49m[43mrun_line_magic[49m[43m([49m[33;43m'[39;49m[33;43mload_ext[39;49m[33;43m'[39;49m[43m,[49m[43m [49m[33;43m'[39;49m[33;43mmemory_profiler[39;49m[33;43m'[39;49m[43m)[49m

[36mFile [39m[32m~\AppData\Roaming\Python\Python313\site-packages\IPython\core\interactiveshell.py:2486[39m, in [36mInteractiveShell.run_line_magic[39m[34m(self=<ipykernel.zmqshell.ZMQInteractiveShell object>, magic_name='load_ext', line='memory_profiler', _stack_depth=1)[39m
[32m   2484[39m     kwargs[[33m'[39m[33mlocal_ns[39m[33m'[39m] = [38;5;28mself[39m.get_local_scope(stack_depth)
[32m   2485[39m [38;5;28;01mwith[39;00m [38;5;28mself[39m.builtin_trap:
[32m-> [39m[32m2486[39m     result = [43mfn[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
        fn [34m= [39m[34m<bound method ExtensionMagics.load_ext of <IPython.core.magics.extension.ExtensionMagics object at 0x000002240D1D6510>>[39m
        args [34m= [39m[34m['memory_profiler'][39m
        kwargs [34m= [39m[34m{}[39m[32m   2488[39m [38;5;66;03m# The code below prevents the output from being displayed[39;00m
[32m   2489[39m [38;5;66;03m# when using magics with decorator @output_can_be_silenced[39;00m
[32m   2490[39m [38;5;66;03m# when the last Python token in the expression is a ';'.[39;00m
[32m   2491[39m [38;5;28;01mif[39;00m [38;5;28mgetattr[39m(fn, magic.MAGIC_OUTPUT_CAN_BE_SILENCED, [38;5;28;01mFalse[39;00m):

[36mFile [39m[32m~\AppData\Roaming\Python\Python313\site-packages\IPython\core\magics\extension.py:33[39m, in [36mExtensionMagics.load_ext[39m[34m(self=<IPython.core.magics.extension.ExtensionMagics object>, module_str='memory_profiler')[39m
[32m     31[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m module_str:
[32m     32[39m     [38;5;28;01mraise[39;00m UsageError([33m'[39m[33mMissing module name.[39m[33m'[39m)
[32m---> [39m[32m33[39m res = [38;5;28;43mself[39;49m[43m.[49m[43mshell[49m[43m.[49m[43mextension_manager[49m[43m.[49m[43mload_extension[49m[43m([49m[43mmodule_str[49m[43m)[49m
        module_str [34m= [39m[34m'memory_profiler'[39m
        self.shell [34m= [39m[34m<ipykernel.zmqshell.ZMQInteractiveShell object at 0x000002240D142E40>[39m
        self [34m= [39m[34m<IPython.core.magics.extension.ExtensionMagics object at 0x000002240D1D6510>[39m[32m     35[39m [38;5;28;01mif[39;00m res == [33m'[39m[33malready loaded[39m[33m'[39m:
[32m     36[39m     [38;5;28mprint[39m([33m"[39m[33mThe [39m[38;5;132;01m%s[39;00m[33m extension is already loaded. To reload it, use:[39m[33m"[39m % module_str)

[36mFile [39m[32m~\AppData\Roaming\Python\Python313\site-packages\IPython\core\extensions.py:62[39m, in [36mExtensionManager.load_extension[39m[34m(self=<IPython.core.extensions.ExtensionManager object>, module_str='memory_profiler')[39m
[32m     55[39m [38;5;250m[39m[33;03m"""Load an IPython extension by its module name.[39;00m
[32m     56[39m 
[32m     57[39m [33;03mReturns the string "already loaded" if the extension is already loaded,[39;00m
[32m     58[39m [33;03m"no load function" if the module doesn't have a load_ipython_extension[39;00m
[32m     59[39m [33;03mfunction, or None if it succeeded.[39;00m
[32m     60[39m [33;03m"""[39;00m
[32m     61[39m [38;5;28;01mtry[39;00m:
[32m---> [39m[32m62[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_load_extension[49m[43m([49m[43mmodule_str[49m[43m)[49m
        module_str [34m= [39m[34m'memory_profiler'[39m
        self [34m= [39m[34m<IPython.core.extensions.ExtensionManager object at 0x000002240D1D74D0>[39m[32m     63[39m [38;5;28;01mexcept[39;00m [38;5;167;01mModuleNotFoundError[39;00m:
[32m     64[39m     [38;5;28;01mif[39;00m module_str [38;5;129;01min[39;00m BUILTINS_EXTS:

[36mFile [39m[32m~\AppData\Roaming\Python\Python313\site-packages\IPython\core\extensions.py:77[39m, in [36mExtensionManager._load_extension[39m[34m(self=<IPython.core.extensions.ExtensionManager object>, module_str='memory_profiler')[39m
[32m     75[39m [38;5;28;01mwith[39;00m [38;5;28mself[39m.shell.builtin_trap:
[32m     76[39m     [38;5;28;01mif[39;00m module_str [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m sys.modules:
[32m---> [39m[32m77[39m         mod = [43mimport_module[49m[43m([49m[43mmodule_str[49m[43m)[49m
        module_str [34m= [39m[34m'memory_profiler'[39m[32m     78[39m     mod = sys.modules[module_str]
[32m     79[39m     [38;5;28;01mif[39;00m [38;5;28mself[39m._call_load_ipython_extension(mod):

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88[39m, in [36mimport_module[39m[34m(name='memory_profiler', package=None)[39m
[32m     86[39m             [38;5;28;01mbreak[39;00m
[32m     87[39m         level += [32m1[39m
[32m---> [39m[32m88[39m [38;5;28;01mreturn[39;00m [43m_bootstrap[49m[43m.[49m[43m_gcd_import[49m[43m([49m[43mname[49m[43m[[49m[43mlevel[49m[43m:[49m[43m][49m[43m,[49m[43m [49m[43mpackage[49m[43m,[49m[43m [49m[43mlevel[49m[43m)[49m
        level [34m= [39m[34m0[39m
        name [34m= [39m[34m'memory_profiler'[39m
        name[level:] [34m= [39m[34m'memory_profiler'[39m
        package [34m= [39m[34mNone[39m
        _bootstrap [34m= [39m[34m<module '_frozen_importlib' (frozen)>[39m
[36mFile [39m[32m<frozen importlib._bootstrap>:1387[39m, in [36m_gcd_import[39m[34m(name='memory_profiler', package=None, level=0)[39m

[36mFile [39m[32m<frozen importlib._bootstrap>:1360[39m, in [36m_find_and_load[39m[34m(name='memory_profiler', import_=<function _gcd_import>)[39m

[36mFile [39m[32m<frozen importlib._bootstrap>:1324[39m, in [36m_find_and_load_unlocked[39m[34m(name='memory_profiler', import_=<function _gcd_import>)[39m

[31mModuleNotFoundError[39m: No module named 'memory_profiler'

